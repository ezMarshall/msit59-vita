@{
	var paymentInfo = ViewBag.PaymentInfo;

}



<section class="container-lg">

	<div class="order mt-3 row mb-3">
		<div class="order-step mx-auto col-md-8 d-flex justify-content-around mb-4">
			<div class="step active col-2 text-center fw-bold ">
				<div class="circle d-inline-block mb-1 rounded-circle">1</div>
				<div class="fs-6 fw-bold text-break">選擇付款明細</div>
			</div>
			<div class="step inactive col-2 text-center fw-bold ">
				<div class="circle  d-inline-block mb-1 rounded-circle">2</div>
				<div class="fs-6 fw-bold text-break">確認結帳</div>
			</div>
		</div>
		<div class="order-form row bg-white rounded-2 col-9 mx-auto py-4 px-5">
			<form method="post">
				<div class="order-store-info my-3">
					@if (paymentInfo != null && paymentInfo.Count > 0 && paymentInfo[0].StoreName != null)
					{
						<div class="store-name fs-3 fw-bold mb-1">@paymentInfo[0].StoreName </div>
						<div class="store-phone fs-5 fw-bold"><i class="fa-solid fa-phone"></i>&nbsp;&nbsp;@paymentInfo[0].StorePhoneNumber</div>
					}
					else
					{
						<div class="store-name fs-3 fw-bold mb-1">未選擇店家</div>
					}

				</div>

				<div class="order-list mb-2">
					<div class="fs-5 fw-bold mb-2">購物內容</div>

					<div class="userInfo px-3 d-flex align-items-center mb-2">
						<img src="/image/Common/user.png" class="rounded-circle img-fluid me-3" alt="用戶頭像">

						@if (paymentInfo != null && paymentInfo.Count > 0 && paymentInfo[0].CustomerName != null)
						{
							<div class="fs-5 fw-bold">@paymentInfo[0].CustomerName</div>
						}
						else
						{
							<div class="fs-5 fw-bold">@ViewBag.CustomerName</div>
						}
					</div>

					<div class="order-product-list">
						@foreach (var item in paymentInfo)
						{
							var productPrice = (int)item.ProductUnitPrice;
							var productQuantity = item.ShoppingCartQuantity;

							<div class="order-product-item rounded-2 p-4 mx-2 d-flex align-items-center flex-wrap mb-2" data-id="@item.ShoppingCartId" data-productid="@item.ProductId" data-stock="@item.ProductUnitsInStock" data-storeid="@item.StoreId">
								<div class="product-info col-6">
									<div class="product-name fw-bold">
										<div class="fs-5">@item.ProductName</div>
										<div class="text-muted product-price" data-price="@productPrice">$ @((int)item.ProductUnitPrice) / 1 份</div>
									</div>
								</div>
								<div class="col-6 d-flex justify-content-around align-items-center">
									<div class="input-group w-50">
										<button class="btn border-0" type="button" onclick="orderAdjustValue(this, -1, @item.ShoppingCartId, @item.ProductUnitsInStock)">
											<i class="fa-solid fa-minus fs-5 fw-bold text-black"></i>
										</button>
										<input type="text" class="form-control fs-5 fw-bold text-center px-0 product-quantity-input" value="@item.ShoppingCartQuantity"
											   id="number" autocomplete="off" min="1" max="99" oninput="this.value=this.value.replace(/[^0-9]/g,'')">
										<button class="btn border-0" type="button" onclick="orderAdjustValue(this, 1, @item.ShoppingCartId, @item.ProductUnitsInStock)">
											<i class="fa-solid fa-plus fs-5 fw-bold text-black"></i>
										</button>
									</div>
									<div class="product-item-price product-item-total-price fs-5 fw-bold"></div>
									<div class="product-delete text-success fs-5" onclick="orderDeleteCartItem(@item.ShoppingCartId)"><i class="fa-solid fa-trash"></i></div>
								</div>

							</div>

						}
					</div>

					<div class="order-total-price fs-5 fw-bold text-end pe-4">應付金額：<span class="totalOrderPriceNum"></span></div>

				</div>

				<div class="order-pay mb-2">
					<div class="fs-5 fw-bold">付款方式</div>

					<div class="form-check ms-3">
						<input class="form-check-input" type="radio" name="flexRadioPay" id="flexRadioPay1"
							   value="0" checked required>
						<label class="form-check-label" for="flexRadioPay1">
							現金
						</label>
					</div>

					@if (paymentInfo != null && paymentInfo.Count > 0)
					{
						@if (paymentInfo[0].StoreLinePay == true)
						{
							<div class="form-check ms-3">
								<input class="form-check-input" type="radio" name="flexRadioPay" id="flexRadioPay2"
									   value="1">
								<label class="form-check-label" for="flexRadioPay2">
									LINE PAY
								</label>
							</div>
						}

					}

				</div>












				<div class="order-pick-up mb-2">
					<div class="d-flex justify-content-between">
						<div class="fs-5 fw-bold">取餐方式</div>
						<div class="member-profile form-check fw-bold pe-3">
							<input class="form-check-input" type="checkbox" value="" id="flexCheckmemberProfile">
							<label class="form-check-label" for="flexCheckmemberProfile">
								帶入會員資料
							</label>
						</div>
					</div>


					<div class="form-check ms-3">
						<input class="form-check-input" type="radio" name="flexRadioPickUp" id="flexRadioPickUp1"
							   value="0" checked required>
						<label class="form-check-label" for="flexRadioPickUp1">
							自取 (約 15 分鐘)
						</label>
					</div>

					<div class="form-check ms-3">
						<input class="form-check-input" type="radio" name="flexRadioPickUp" id="flexRadioPickUp2"
							   data-bs-toggle="modal" data-bs-target="#addressModal" value="1">
						<label class="form-check-label" for="flexRadioPickUp2" data-bs-toggle="modal"
							   data-bs-toggle="modal" data-bs-target="#addressModal">
							外送 (約 30 分鐘)
						</label>
					</div>

					<input type="text" class="form-control" placeholder="請輸入地址" id="addressInput"
						   readonly="readonly" data-bs-toggle="modal" data-bs-target="#addressModal"
						   onclick="focusRadio('flexRadioPickUp2')">

				</div>

				<div class="order-time mb-2">
					<div class="fs-5 fw-bold">預計取餐時間</div>
					<input id="timeInput" type="text" class="form-control" placeholder="請選擇取餐時間" readonly="readonly"
						   data-bs-toggle="modal" data-bs-target="#timeModal">

				</div>



















				<div class="order-invoice mb-2">
					<div class="fs-5 fw-bold">開立發票方式</div>

					@if (paymentInfo != null && paymentInfo.Count > 0 && paymentInfo[0].StoreUniformInvoiceVia != true)
					{
						<div class="form-check ms-3">
							<input class="form-check-input" type="radio" name="flexRadioReceipt" id="flexRadioReceipt0"
								   value="0" checked required>
							<label class="form-check-label" for="flexRadioReceipt0">不開立發票</label>
						</div>
					}
					else
					{
						<div class="form-check ms-3">
							<input class="form-check-input" type="radio" name="flexRadioReceipt" id="flexRadioReceipt1"
								   value="1" onclick="handleReceiptTypeChange('paper')" checked required>
							<label class="form-check-label" for="flexRadioReceipt1">紙本發票</label>
						</div>

						<div class="form-check ms-3">
							<input class="form-check-input" type="radio" name="flexRadioReceipt" id="flexRadioReceipt2"
								   onclick="focusInput('inputCarrier')" value="2">
							<label class="form-check-label" for="flexRadioReceipt2" onclick="handleReceiptTypeChange('paper')"
								   data-bs-focus="inputCarrier">手機載具</label>
							<input id="inputCarrier" class="form-control" type="text" placeholder="首位為 / ，英文字母為大寫"
								   aria-label="default input carrier" onfocus="focusRadio('flexRadioReceipt2')"
								   autocomplete="off" oninput="validateCarrier()">
							<div id="carrierFeedback" class="invalid-feedback">請輸入有效的手機載具，首位應為 / ，英文字母需為大寫</div>
						</div>
					}
				</div>

				<div class="order-phone-number mb-2">
					<div class="fs-5 fw-bold">聯絡電話</div>

					<div class="form-check ms-3">
						<input class="form-check-input" type="radio" name="flexRadioPhone" id="flexRadioCellphone"
							   onclick="handlePhoneTypeChange('cellphone')" required>
						<label class="form-check-label" for="flexRadioCellphone"
							   onclick="handlePhoneTypeChange('cellphone')">手機號碼</label>
						<input id="inputCellphone" class="form-control" type="text" placeholder="請輸入手機號碼"
							   aria-label="default input cellphone" onfocus="focusRadio('flexRadioCellphone')"
							   oninput="validatePhone('cellphone')" autocomplete="off">
						<div id="cellphoneFeedback" class="invalid-feedback">請輸入有效的手機號碼式</div>
					</div>

					<div class="form-check ms-3">
						<input class="form-check-input" type="radio" name="flexRadioPhone" id="flexRadioPhone"
							   onclick="handlePhoneTypeChange('phone')">
						<label class="form-check-label" for="flexRadioPhone"
							   onclick="handlePhoneTypeChange('phone')">市話</label>
						<input id="inputPhone" class="form-control" type="text" placeholder="請輸入市話"
							   aria-label="default input phone" onfocus="focusRadio('flexRadioPhone')"
							   oninput="validatePhone('phone')" autocomplete="off">
						<div id="phoneFeedback" class="invalid-feedback">請輸入有效的市話</div>
					</div>


				</div>

				<div class="order-textarea">
					<div class="fs-5 fw-bold">給店家留言 <span class="fs-6 fw-light text-muted">(最大長度250個字)</div>
					<textarea class="form-control mb-4" id="orderFormControlTextarea1" rows="10"></textarea>
				</div>

			</form>

		</div>
	</div>


	<div class="row mb-3 mx-auto w-75">
		<div class="btn-group" role="group" aria-label="Basic example">
			<button id="continueShoppingBtn" class="btn-cart btn btn-outline-light fs-5 fw-bold" type="button">
				<a href="javascript:void(0)"
				   class="text-decoration-none text-black">繼續加購</a>
			</button>
			<button class="btn-next btn btn-dark fs-5 fw-bold" type="button">
				<a href="javascript:void(0)"
				   class="text-decoration-none text-white">下一步</a>
			</button>
		</div>
	</div>
</section>




<!-- 地址填寫開始 -->
<div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title fw-bold" id="addressModalLabel">地址</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form class="address-form needs-validation" novalidate>
					<div class="fs-6 fw-bold mb-2">填寫地址</div>

					<div class="city-selector-set d-flex mb-2 justify-content-between address-style-selector"
						 role="tw-city-selector">

						<select id="county" class="county" required></select>
						<select id="district" class="district" required></select>
					</div>

					<div class="mb-2">
						<label for="addressNameInput" class="form-label fw-bold">地址</label>
						<input type="text" class="form-control addressName" id="addressNameInput"
							   aria-describedby="addressName" placeholder="請輸入正確格式，範例如上" autocomplete="off" required>
						<div id="addressName" class="form-text">範例格式：新安路一段5號</div>
						<div class="invalid-feedback">請填寫正確的地址。</div>
					</div>

				</form>
			</div>
			<div class="modal-footer">
				<button type="submit" class="address-button btn btn-dark col-6 mx-auto" onclick="validateAddressForm()">
					確定
				</button>
			</div>
		</div>
	</div>
</div>

<!-- 地址填寫結束 -->
<!-- 取餐時間開始 -->
<!-- 取餐時間開始 -->
<div class="modal fade" id="timeModal" tabindex="-1" aria-labelledby="timeModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title fw-bold" id="timeModalLabel">預計取餐時間</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="date-time-form ">
					<input id="datepicker" class="form-control mb-2" type="text" placeholder="當天日期"
						   aria-label="default input date" readonly="readonly">
					<div class="dropdown">

						<input class="form-control dropdown-toggle" type="text" placeholder="HH:mm"
							   aria-label="default input time" id="timepicker" readonly="readonly"
							   data-bs-toggle="dropdown" data-bs-auto-close="false" aria-expanded="false">


						<div class="dropdown-menu w-100" aria-labelledby="timepicker">

							<div class="select-list d-flex justify-content-between ">
								<ul id="hours" class="hours text-center flex-grow-1 list-group rounded-0">
								</ul>


								<ul id="minutes" class="minutes text-center flex-grow-1 list-group rounded-0">
								</ul>
							</div>


						</div>
					</div>

				</div>

			</div>
			<div class="modal-footer">
				<button type="submit" class="date-time-button btn btn-dark col-6 mx-auto "
						data-bs-dismiss="modal">
					確定
				</button>
			</div>
		</div>
	</div>
</div>

<!-- 取餐結束開始 -->
<!-- 取餐結束開始 -->
@section Scripts {



	<script src="~/js/tw-city-selector.js"></script>
	<script src="~/js/data-time.js"></script>
	<script>

		$(document).ready(function () {
			getOrderCart()
			calculateOrderTotalPrice();
			calculateProductItemTotalPrice()
		});


		function getOrderCart() {
			$.ajax({
				type: "GET",
				url: "/ShoppingCarts/Index",
				success: function (data) {
					if (!data.success) {
						return;
					}

					renderOrderCartItems(data.cart);


				},
				error: function (xhr, status, error) {
					console.error("Error fetching cart data: ", error);
				}
			});
		}

		function renderOrderCartItems(orderProductItems) {
			var orderProductList = $(".order-product-list");
			orderProductList.empty();

			orderProductItems.forEach(function (item) {
				var orderProductItemsHtml = `
													<div class="order-product-item rounded-2 p-4 mx-2 d-flex align-items-center flex-wrap mb-2" data-id="${item.shoppingCartId}" data-productid="${item.productId}" data-stock="${item.productUnitsInStock}" data-storeid="${item.storeID}">
														<div class="product-info col-6">
															<div class="product-name fw-bold">
																<div class="fs-5">${item.productName}</div>
																<div class="text-muted product-price" data-price="${item.price}">$ ${item.price} / 1 份</div>
															</div>
														</div>
														<div class="col-6 d-flex justify-content-around align-items-center">
															<div class="input-group w-50">
																<button class="btn border-0" type="button" onclick="orderAdjustValue(this, -1, ${item.shoppingCartId}, ${item.productUnitsInStock})">
																	<i class="fa-solid fa-minus fs-5 fw-bold text-black"></i>
																</button>
																<input type="text" class="form-control fs-5 fw-bold text-center px-0 product-quantity-input" value="${item.quantity}"
																		id="number" autocomplete="off" min="1" max="99" oninput="this.value=this.value.replace(/[^0-9]/g,'')">
																<button class="btn border-0" type="button" onclick="orderAdjustValue(this, 1, ${item.shoppingCartId},${item.productUnitsInStock})">
																	<i class="fa-solid fa-plus fs-5 fw-bold text-black"></i>
																</button>
															</div>
															<div class="product-item-price product-item-total-price fs-5 fw-bold"></div>
															<div class="product-delete text-success fs-5" onclick="orderDeleteCartItem(${item.shoppingCartId})"><i class="fa-solid fa-trash"></i></div>
														</div>
													</div>
																`;
				orderProductList.append(orderProductItemsHtml);
			});

			calculateOrderTotalPrice();
			countOrderCartItems();
			calculateProductItemTotalPrice();

		}


		//商品數量改變時
		$(document).ready(function () {

			$('.order-product-list').on('input change paste keyup', '.product-quantity-input', function () {

				var inputField = $(this);
				var cartItemId = inputField.closest('.order-product-item').data('id');
				var maxStock = inputField.closest('.order-product-item').data('stock');
				var productId = inputField.closest('.order-product-item').data('productid');
				var storeId = inputField.closest('.order-product-item').data('storeid');

				var currentValue = parseInt(inputField.val());

				var newValue = currentValue;

				if (isNaN(newValue) || newValue < 1) {
					newValue = 1;
				} else if (newValue > maxStock) {
					newValue = maxStock;
					maxQuantity()
				} else if (newValue > 30) {
					newValue = 30;
					maxQuantity()
				}

				inputField.val(newValue);

				calculateOrderTotalPrice();
				countOrderCartItems();
				calculateProductItemTotalPrice();


				// 發送 AJAX 請求
				$.ajax({
					url: '/ShoppingCarts/AddToCartInput', // 你的控制器方法的路徑
					type: 'POST',
					data: { productId: productId, quantity: newValue, storeId: storeId },
					success: function (data) {
						// 在這裡處理從控制器返回的數據
						getCart();
					},
					error: function () {
						alert('發生錯誤');
					}
				});

			});

		});

		// 加減商品數量
		function orderAdjustValue(button, increment, cartItemId, maxStock) {
			var inputField = $(button).closest('.input-group').find('.product-quantity-input');
			var currentValue = parseInt(inputField.val());
			var productId = inputField.closest('.order-product-item').data('productid');
			var storeId = inputField.closest('.order-product-item').data('storeid');
			var newValue = currentValue + increment;
			if (newValue < 1) {
				newValue = 1;
			} else if (newValue > maxStock) {
				newValue = maxStock;
				maxQuantity()
			} else if (newValue > 30) {
				newValue = 30;
				maxQuantity();
			}

			inputField.val(newValue);
			calculateOrderTotalPrice();
			countOrderCartItems();
			calculateProductItemTotalPrice();

			//console.log(productId);
			//console.log(newValue);
			//console.log(storeId);
			// 發送 AJAX 請求
			$.ajax({
				url: '/ShoppingCarts/AddToCartInput', // 你的控制器方法的路徑
				type: 'POST',
				data: { productId: productId, quantity: newValue, storeId: storeId },
				success: function (data) {
					// 在這裡處理從控制器返回的數據
					getCart();
					//console.log(data);

				},
				error: function () {
					alert('發生錯誤');
				}
			});

		}

		//計算總價
		function calculateOrderTotalPrice() {
			var totalPrice = 0;
			$('.order-product-item').each(function () {
				var quantity = parseInt($(this).find('.product-quantity-input').val());
				var price = parseInt($(this).find('.product-price').data('price'));
				if (!isNaN(quantity) && !isNaN(price)) {
					totalPrice += quantity * price;
				}
			});
			if (!isNaN(totalPrice)) {
				$('.totalOrderPriceNum').text('$' + totalPrice);
			}
		}


		//計算單件商品購買金額
		function calculateProductItemTotalPrice() {
			$('.order-product-item').each(function () {
				var quantity = parseInt($(this).find('.product-quantity-input').val());
				var price = parseInt($(this).find('.product-price').data('price'));

				// console.log(quantity);
				// console.log(price);

				if (!isNaN(quantity) && !isNaN(price)) {
					var totalPrice = quantity * price;
					// 更新顯示每個商品的總價
					$(this).find('.product-item-total-price').text('$' + totalPrice);
				}
			});

		}

		//統計商品數量
		function countOrderCartItems() {
			var totalCartItems = 0;
			$('.order-product-item').each(function () {
				var quantity = parseInt($(this).find('.product-quantity-input').val());
				if (!isNaN(quantity)) {
					totalCartItems += quantity;
				}
			});

			var cartBadge = $('#cartNum');
			if (totalCartItems > 0) {
				cartBadge.removeClass('d-none');
				if (totalCartItems >= 99) {
					cartBadge.text(99)
				} else {
					cartBadge.text(totalCartItems);
				}
			} else {
				cartBadge.addClass('d-none');
			}

		}

		// 刪除商品
		function orderDeleteCartItem(cartItemId) {
			//console.log(cartItemId);
			$.ajax({
				type: "POST",
				url: "/ShoppingCarts/Delete",
				data: { id: cartItemId },
				success: function (data) {
					//console.log(data);
					if (data.success) {
						$(`.order-product-item[data-id=${cartItemId}]`).remove();
						calculateOrderTotalPrice(); // 成功更新後重新獲取購物車資料
						countOrderCartItems();
						getCart();
						//console.log("Item deleted successfully.");
					} else {
						console.error("Error: ", data.message);
					}
				},
				error: function (xhr, status, error) {
					console.error("Error deleting item: ", error);
				}
			});
		}



		function focusInput(elementId) {
			const element = document.getElementById(elementId);
			if (element) {
				element.focus();
			}
		}

		function focusRadio(elementId) {
			const element = document.getElementById(elementId);
			if (element) {
				element.checked = true;
			}
		}



		//手機載具驗證
		/*
		* 第 1 碼為 /
		* 其餘 7 碼為 0-9 A-Z . - +
		*/
		function validateCarrier() {
			const input = document.getElementById('inputCarrier');
			const feedback = document.getElementById('carrierFeedback');
			const pattern = /^\/[0-9A-Z.+-]{7}$/; // 請輸入有效的手機載具，首位應為 / ，英文字母需為大寫
			if (pattern.test(input.value)) {
				input.classList.remove('is-invalid');
				input.classList.add('is-valid');
				feedback.style.display = 'none';
			} else {
				input.classList.remove('is-valid');
				input.classList.add('is-invalid');
				feedback.style.display = 'block';
			}
		}

		//如果原先手機載具輸入框有值，則切換到紙本發票後清空手機載具輸入框的值
		function handleReceiptTypeChange(type) {
			const input = document.getElementById('inputCarrier');
			const carrierFeedback = document.getElementById('carrierFeedback');
			if (type === 'paper') {
				input.value = '';
				input.classList.remove('is-valid', 'is-invalid');
				carrierFeedback.style.display = 'none';
			} else if (type === 'carrier') {
				focusInput('inputCarrier');
			}
		}

		//電話格式驗證
		function validatePhone(type) {
			const inputCellphone = document.getElementById('inputCellphone');
			const inputPhone = document.getElementById('inputPhone');
			const cellphoneFeedback = document.getElementById('cellphoneFeedback');
			const phoneFeedback = document.getElementById('phoneFeedback');

			if (type === 'cellphone') {
				const pattern = /^09\d{8}$/; // 正則表達式，驗證手機號碼格式
				if (pattern.test(inputCellphone.value)) {
					inputCellphone.classList.remove('is-invalid');
					inputCellphone.classList.add('is-valid');
					cellphoneFeedback.style.display = 'none';
				} else {
					inputCellphone.classList.remove('is-valid');
					inputCellphone.classList.add('is-invalid');
					cellphoneFeedback.style.display = 'block';
				}
			} else if (type === 'phone') {
				const pattern = /^0\d{1,2}\d{6,8}$/; // 正則表達式，驗證市話格式
				if (pattern.test(inputPhone.value)) {
					inputPhone.classList.remove('is-invalid');
					inputPhone.classList.add('is-valid');
					phoneFeedback.style.display = 'none';
				} else {
					inputPhone.classList.remove('is-valid');
					inputPhone.classList.add('is-invalid');
					phoneFeedback.style.display = 'block';
				}
			}
		}

		function handlePhoneTypeChange(type) {
			const inputCellphone = document.getElementById('inputCellphone');
			const inputPhone = document.getElementById('inputPhone');

			if (type === 'cellphone') {
				inputPhone.value = '';
				inputPhone.classList.remove('is-valid', 'is-invalid');
				phoneFeedback.style.display = 'none';
				focusInput('inputCellphone');
			} else if (type === 'phone') {
				inputCellphone.value = '';
				inputCellphone.classList.remove('is-valid', 'is-invalid');
				cellphoneFeedback.style.display = 'none';
				focusInput('inputPhone');
			}
		}

		//給店家留言
		// 獲取文字區域元素
		const textarea = document.getElementById('orderFormControlTextarea1');

		// 設置最大文字長度限制,例如500個字符
		const maxLength = 500;

		// 監聽 input 事件
		textarea.addEventListener('input', () => {
			// 如果文字長度超過上限,截斷多餘部分
			if (textarea.value.length > maxLength) {
				textarea.value = textarea.value.slice(0, maxLength);
			}
		});

		// 監聽 input 事件
		textarea.addEventListener('input', () => {
			// 使用正則表達式過濾掉危險字符
			const sanitizedValue = textarea.value.replace(/[<>\/]/g, '');

			// 如果有不安全的字符被移除,更新文字區域的值
			if (sanitizedValue !== textarea.value) {
				textarea.value = sanitizedValue;
			}
		});

		// 地址填寫開始

		new TwCitySelector({
			el: '.city-selector-set',
			elCounty: '.county',
			elDistrict: '.district',
			bootstrapStyle: true
		});

		let selectedCountyValue = '';
		let selectedDistrictValue = '';
		let combinedValue = '';
		let addressNameValue = '';

		document.getElementById("county").addEventListener("change", function () {
			selectedCountyValue = this.value;
		});

		document.getElementById("district").addEventListener("change", function () {
			selectedDistrictValue = this.value;
			combinedValue = selectedCountyValue + selectedDistrictValue;
		});

		document.getElementById("addressNameInput").addEventListener("blur", function () {
			addressNameValue = this.value;
		});

		// 地址驗證
		function validateAddressForm() {
			const form = document.querySelector('.address-form');
			if (form.checkValidity()) {
				form.classList.remove('was-validated');
				const addressInput = document.getElementById("addressInput");
				addressInput.value = combinedValue + " " + addressNameValue;
				var myModalEl = document.getElementById('addressModal');
				var modal = bootstrap.Modal.getInstance(myModalEl);
				modal.hide();
			} else {
				form.classList.add('was-validated');
			}
		}

		// 地址填寫結束

		// 地址驗證
		// function validateAddressForm() {
		// 	const form = document.querySelector('.address-form');
		// 	if (form.checkValidity()) {
		// 		form.classList.remove('was-validated');
		// 		// 这里可以添加提交表单或保存数据的逻辑
		// 		// 关闭模态框
		// 		var myModalEl = document.getElementById('addressModal');
		// 		var modal = bootstrap.Modal.getInstance(myModalEl);
		// 		modal.hide();
		// 	} else {
		// 		form.classList.add('was-validated');
		// 	}
		// }


		// function validateTimeForm() {
		// 	var datepicker = document.getElementById("datepicker").value;
		// 	var timepicker = document.getElementById("timepicker").value;

		// 	if (!datepicker || !timepicker) {
		// 		alert("請填寫取餐時間！");
		// 		return false;
		// 	}

		// 	// 如果日期和时间都已填写，可以执行下一步操作，比如关闭模态框
		// 	// 你可以根据需要添加更多逻辑，比如提交表单或进行其他操作
		// 	// 这里假设你有一个表单需要提交，可以如下所示：
		// 	// document.getElementById("yourFormId").submit();

		// 	// 如果不需要自动提交表单，只需关闭模态框即可：
		// 	$('#timeModal').modal('hide');

		// 	return true;
		// }

		//自動帶入會員資料
		$(document).ready(function () {
			$('#flexCheckmemberProfile').change(function () {
				if (this.checked) {
					
					$.ajax({
						url: '/CheckedPayment/GetMemberProfile',
						type: 'GET',
						dataType: 'json',
						success: function (response) {
							if (response.success) {
								var data = response.data;
								// 填入会员资料
								$('#addressInput').val(data.address);
								$('#inputCarrier').val(data.carrier);



								// 自動選擇外送選項框
								$('#flexRadioPickUp2').prop('checked', true);

								// 自動選擇手機載具選項框
								if (data.carrier) {
									$('#flexRadioReceipt2').prop('checked', true);
								}

								// 根據返回的電話類型選擇相應的選項框

								if (data.cellphone) {
									$('#flexRadioCellphone').prop('checked', true);
									$('#inputCellphone').val(data.cellphone);
								} else if (data.phone) {
									$('#flexRadioPhone').prop('checked', true);
									$('#inputPhone').val(data.phone);
								}

							} else {
								console.error('Error: ' + response.message);
							}
						},
						error: function (xhr, status, error) {
							console.error('Error fetching member profile:', error);
						}
					});
				} else {
					// 清空输入框
					$('#addressInput').val('');
					$('#inputCarrier').val('');
					$('#inputCellphone').val('');
					$('#inputPhone').val('');
				}
			});
		});


		// 點擊繼續加購功能
		$('#continueShoppingBtn').click(function () {
			// 重新導向至首頁
			continueShopping()
		});

		function continueShopping() {
			
			$.ajax({
				url: '/CheckedPayment/GetShopping',
				type: 'GET',
				success: function (data) {
					// console.log(data);
					
					if (data.success) {

						if (data.data.length === 0) {
							// 重新導向至首頁
							window.location.href = '/';
						} else {
							// 重新導向至商店
							window.location.href = '/Store/Index/' + data.data[0].storeId;
						}
						
						// 重新導向至首頁
						// window.location.href = '/';
					} else {
						console.error('Error: ' + data.message);
					}
				},
				error: function (xhr, status, error) {
					console.error('Error clearing cart:', error);
				}
			});
		}


		// 點擊送出訂單按鈕
		// function submitOrder() {
		// 	// 驗證地址
		// 	const addressInput = document.getElementById("addressInput");
		// 	if (!addressInput.value) {
		// 		alert("請填寫地址！");
		// 		return false;
		// 	}

		// 	// 驗證手機載具
		// 	const receiptType = document.querySelector('input[name="receiptType"]:checked');
		// 	if (receiptType.value === 'carrier' && !document.getElementById('inputCarrier').value) {
		// 		alert("請填寫手機載具！");
		// 		return false;
		// 	}

		// 	// 驗證電話
		// 	const phoneType = document.querySelector('input[name="phoneType"]:checked');
		// 	if (phoneType.value === 'cellphone' && !document.getElementById('inputCellphone').value) {
		// 		alert("請填寫手機號碼！");
		// 		return false;
		// 	} else if (phoneType.value === 'phone' && !document.getElementById('inputPhone').value) {
		// 		alert("請填寫市話！");
		// 		return false;
		// 	}

		// 	// 驗證取餐時間
		// 	const datepicker = document.getElementById("datepicker").value;
		// 	const timepicker = document.getElementById("timepicker").value;
		// 	if (!datepicker || !timepicker) {
		// 		alert("請填寫取餐時間！");
		// 		return false;
		// 	}

		// 	// 驗證留言
		// 	const textarea = document.getElementById('orderFormControlTextarea1');
		// 	if (textarea.value.length > 500) {
		// 		alert("留言字數超過上限！");
		// 		return false;
		// 	}



		// 	// 確認是否有選擇商品
		// 	if ($('.order-product-item').length === 0) {
		// 		alert("請選擇商品！");
		// 		return false;
		// 	}

		// 	/
		// 	// 確認是否同意付款方式
		// 	const paymentCheckbox = document.getElementById('orderFormControlCheckbox5');
		// 	if (!paymentCheckbox.checked) {
		// 		alert("請選擇付款方式！");
		// 		return false;
		// 	}

		// }



























	</script>

}